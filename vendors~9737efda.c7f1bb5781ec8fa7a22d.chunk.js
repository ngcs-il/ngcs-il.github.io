(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["vendors~9737efda"],{

/***/ "CyDa":
/*!************************************************************************************************!*\
  !*** ./node_modules/aurelia-authentication/dist/native-modules/authenticatedValueConverter.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.__esModule = true;\nexports.AuthenticatedValueConverter = undefined;\n\nvar _dec, _class;\n\nvar _aureliaDependencyInjection = __webpack_require__(/*! aurelia-dependency-injection */ \"3U8n\");\n\nvar _aureliaAuthentication = __webpack_require__(/*! ./aurelia-authentication */ \"aurelia-authentication\");\n\n\n\nvar AuthenticatedValueConverter = exports.AuthenticatedValueConverter = (_dec = (0, _aureliaDependencyInjection.inject)(_aureliaAuthentication.AuthService), _dec(_class = function () {\n  function AuthenticatedValueConverter(authService) {\n    \n\n    this.authService = authService;\n  }\n\n  AuthenticatedValueConverter.prototype.toView = function toView() {\n    return this.authService.authenticated;\n  };\n\n  return AuthenticatedValueConverter;\n}()) || _class);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ3lEYS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9hdXJlbGlhLWF1dGhlbnRpY2F0aW9uL2Rpc3QvbmF0aXZlLW1vZHVsZXMvYXV0aGVudGljYXRlZFZhbHVlQ29udmVydGVyLmpzPzBiMjAiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5BdXRoZW50aWNhdGVkVmFsdWVDb252ZXJ0ZXIgPSB1bmRlZmluZWQ7XG5cbnZhciBfZGVjLCBfY2xhc3M7XG5cbnZhciBfYXVyZWxpYURlcGVuZGVuY3lJbmplY3Rpb24gPSByZXF1aXJlKCdhdXJlbGlhLWRlcGVuZGVuY3ktaW5qZWN0aW9uJyk7XG5cbnZhciBfYXVyZWxpYUF1dGhlbnRpY2F0aW9uID0gcmVxdWlyZSgnLi9hdXJlbGlhLWF1dGhlbnRpY2F0aW9uJyk7XG5cblxuXG52YXIgQXV0aGVudGljYXRlZFZhbHVlQ29udmVydGVyID0gZXhwb3J0cy5BdXRoZW50aWNhdGVkVmFsdWVDb252ZXJ0ZXIgPSAoX2RlYyA9ICgwLCBfYXVyZWxpYURlcGVuZGVuY3lJbmplY3Rpb24uaW5qZWN0KShfYXVyZWxpYUF1dGhlbnRpY2F0aW9uLkF1dGhTZXJ2aWNlKSwgX2RlYyhfY2xhc3MgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIEF1dGhlbnRpY2F0ZWRWYWx1ZUNvbnZlcnRlcihhdXRoU2VydmljZSkge1xuICAgIFxuXG4gICAgdGhpcy5hdXRoU2VydmljZSA9IGF1dGhTZXJ2aWNlO1xuICB9XG5cbiAgQXV0aGVudGljYXRlZFZhbHVlQ29udmVydGVyLnByb3RvdHlwZS50b1ZpZXcgPSBmdW5jdGlvbiB0b1ZpZXcoKSB7XG4gICAgcmV0dXJuIHRoaXMuYXV0aFNlcnZpY2UuYXV0aGVudGljYXRlZDtcbiAgfTtcblxuICByZXR1cm4gQXV0aGVudGljYXRlZFZhbHVlQ29udmVydGVyO1xufSgpKSB8fCBfY2xhc3MpOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///CyDa\n");

/***/ }),

/***/ "Med+":
/*!******************************************************************************************************!*\
  !*** ./node_modules/aurelia-authentication/dist/native-modules/authenticatedFilterValueConverter.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.__esModule = true;\nexports.AuthenticatedFilterValueConverter = undefined;\n\nvar _dec, _class;\n\nvar _aureliaDependencyInjection = __webpack_require__(/*! aurelia-dependency-injection */ \"3U8n\");\n\nvar _aureliaAuthentication = __webpack_require__(/*! ./aurelia-authentication */ \"aurelia-authentication\");\n\nvar _aureliaRouter = __webpack_require__(/*! aurelia-router */ \"4ysu\");\n\n\n\nvar AuthenticatedFilterValueConverter = exports.AuthenticatedFilterValueConverter = (_dec = (0, _aureliaDependencyInjection.inject)(_aureliaAuthentication.AuthService), _dec(_class = function () {\n  function AuthenticatedFilterValueConverter(authService) {\n    \n\n    this.authService = authService;\n  }\n\n  AuthenticatedFilterValueConverter.prototype.toView = function toView(routes) {\n    var isAuthenticated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.authService.authenticated;\n\n    return routes.filter(function (route) {\n      return typeof route.config.auth !== 'boolean' || route.config.auth === isAuthenticated;\n    });\n  };\n\n  return AuthenticatedFilterValueConverter;\n}()) || _class);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWVkKy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9hdXJlbGlhLWF1dGhlbnRpY2F0aW9uL2Rpc3QvbmF0aXZlLW1vZHVsZXMvYXV0aGVudGljYXRlZEZpbHRlclZhbHVlQ29udmVydGVyLmpzPzMxZTciXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5BdXRoZW50aWNhdGVkRmlsdGVyVmFsdWVDb252ZXJ0ZXIgPSB1bmRlZmluZWQ7XG5cbnZhciBfZGVjLCBfY2xhc3M7XG5cbnZhciBfYXVyZWxpYURlcGVuZGVuY3lJbmplY3Rpb24gPSByZXF1aXJlKCdhdXJlbGlhLWRlcGVuZGVuY3ktaW5qZWN0aW9uJyk7XG5cbnZhciBfYXVyZWxpYUF1dGhlbnRpY2F0aW9uID0gcmVxdWlyZSgnLi9hdXJlbGlhLWF1dGhlbnRpY2F0aW9uJyk7XG5cbnZhciBfYXVyZWxpYVJvdXRlciA9IHJlcXVpcmUoJ2F1cmVsaWEtcm91dGVyJyk7XG5cblxuXG52YXIgQXV0aGVudGljYXRlZEZpbHRlclZhbHVlQ29udmVydGVyID0gZXhwb3J0cy5BdXRoZW50aWNhdGVkRmlsdGVyVmFsdWVDb252ZXJ0ZXIgPSAoX2RlYyA9ICgwLCBfYXVyZWxpYURlcGVuZGVuY3lJbmplY3Rpb24uaW5qZWN0KShfYXVyZWxpYUF1dGhlbnRpY2F0aW9uLkF1dGhTZXJ2aWNlKSwgX2RlYyhfY2xhc3MgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIEF1dGhlbnRpY2F0ZWRGaWx0ZXJWYWx1ZUNvbnZlcnRlcihhdXRoU2VydmljZSkge1xuICAgIFxuXG4gICAgdGhpcy5hdXRoU2VydmljZSA9IGF1dGhTZXJ2aWNlO1xuICB9XG5cbiAgQXV0aGVudGljYXRlZEZpbHRlclZhbHVlQ29udmVydGVyLnByb3RvdHlwZS50b1ZpZXcgPSBmdW5jdGlvbiB0b1ZpZXcocm91dGVzKSB7XG4gICAgdmFyIGlzQXV0aGVudGljYXRlZCA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogdGhpcy5hdXRoU2VydmljZS5hdXRoZW50aWNhdGVkO1xuXG4gICAgcmV0dXJuIHJvdXRlcy5maWx0ZXIoZnVuY3Rpb24gKHJvdXRlKSB7XG4gICAgICByZXR1cm4gdHlwZW9mIHJvdXRlLmNvbmZpZy5hdXRoICE9PSAnYm9vbGVhbicgfHwgcm91dGUuY29uZmlnLmF1dGggPT09IGlzQXV0aGVudGljYXRlZDtcbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gQXV0aGVudGljYXRlZEZpbHRlclZhbHVlQ29udmVydGVyO1xufSgpKSB8fCBfY2xhc3MpOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///Med+\n");

/***/ }),

/***/ "aurelia-api":
/*!*********************************************************************!*\
  !*** ./node_modules/aurelia-api/dist/native-modules/aurelia-api.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.__esModule = true;\nexports.Endpoint = exports.Config = exports.Rest = undefined;\n\nvar _dec, _class3;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.configure = configure;\n\nvar _extend = __webpack_require__(/*! extend */ \"6dBs\");\n\nvar _extend2 = _interopRequireDefault(_extend);\n\nvar _aureliaPath = __webpack_require__(/*! aurelia-path */ \"iD3O\");\n\nvar _aureliaFetchClient = __webpack_require__(/*! aurelia-fetch-client */ \"aurelia-fetch-client\");\n\nvar _aureliaDependencyInjection = __webpack_require__(/*! aurelia-dependency-injection */ \"3U8n\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\n\nvar Rest = exports.Rest = function () {\n  function Rest(httpClient, endpoint, useTraditionalUriTemplates) {\n    \n\n    this.defaults = {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    };\n\n    this.client = httpClient;\n    this.endpoint = endpoint;\n    this.useTraditionalUriTemplates = !!useTraditionalUriTemplates;\n  }\n\n  Rest.prototype.request = function request(method, path, body, options, responseOutput) {\n    var requestOptions = (0, _extend2.default)(true, { headers: {} }, this.defaults || {}, options || {}, { method: method, body: body });\n    var contentType = requestOptions.headers['Content-Type'] || requestOptions.headers['content-type'];\n\n    if ((typeof body === 'undefined' ? 'undefined' : _typeof(body)) === 'object' && body !== null && contentType) {\n      requestOptions.body = /^application\\/(.+\\+)?json/.test(contentType.toLowerCase()) ? JSON.stringify(body) : (0, _aureliaPath.buildQueryString)(body);\n    }\n\n    return this.client.fetch(path, requestOptions).then(function (response) {\n      if (response.status >= 200 && response.status < 400) {\n        if (responseOutput) {\n          responseOutput.response = response;\n        }\n\n        return response.json().catch(function () {\n          return null;\n        });\n      }\n\n      throw response;\n    });\n  };\n\n  Rest.prototype.find = function find(resource, idOrCriteria, options, responseOutput) {\n    return this.request('GET', getRequestPath(resource, this.useTraditionalUriTemplates, idOrCriteria), undefined, options, responseOutput);\n  };\n\n  Rest.prototype.findOne = function findOne(resource, id, criteria, options, responseOutput) {\n    return this.request('GET', getRequestPath(resource, this.useTraditionalUriTemplates, id, criteria), undefined, options, responseOutput);\n  };\n\n  Rest.prototype.post = function post(resource, body, options, responseOutput) {\n    return this.request('POST', resource, body, options, responseOutput);\n  };\n\n  Rest.prototype.update = function update(resource, idOrCriteria, body, options, responseOutput) {\n    return this.request('PUT', getRequestPath(resource, this.useTraditionalUriTemplates, idOrCriteria), body, options, responseOutput);\n  };\n\n  Rest.prototype.updateOne = function updateOne(resource, id, criteria, body, options, responseOutput) {\n    return this.request('PUT', getRequestPath(resource, this.useTraditionalUriTemplates, id, criteria), body, options, responseOutput);\n  };\n\n  Rest.prototype.patch = function patch(resource, idOrCriteria, body, options, responseOutput) {\n    return this.request('PATCH', getRequestPath(resource, this.useTraditionalUriTemplates, idOrCriteria), body, options, responseOutput);\n  };\n\n  Rest.prototype.patchOne = function patchOne(resource, id, criteria, body, options, responseOutput) {\n    return this.request('PATCH', getRequestPath(resource, this.useTraditionalUriTemplates, id, criteria), body, options, responseOutput);\n  };\n\n  Rest.prototype.destroy = function destroy(resource, idOrCriteria, options, responseOutput) {\n    return this.request('DELETE', getRequestPath(resource, this.useTraditionalUriTemplates, idOrCriteria), undefined, options, responseOutput);\n  };\n\n  Rest.prototype.destroyOne = function destroyOne(resource, id, criteria, options, responseOutput) {\n    return this.request('DELETE', getRequestPath(resource, this.useTraditionalUriTemplates, id, criteria), undefined, options, responseOutput);\n  };\n\n  Rest.prototype.create = function create(resource, body, options, responseOutput) {\n    return this.post(resource, body, options, responseOutput);\n  };\n\n  return Rest;\n}();\n\nfunction getRequestPath(resource, traditional, idOrCriteria, criteria) {\n  var hasSlash = resource.slice(-1) === '/';\n\n  if (typeof idOrCriteria === 'string' || typeof idOrCriteria === 'number') {\n    resource = '' + (0, _aureliaPath.join)(resource, String(idOrCriteria)) + (hasSlash ? '/' : '');\n  } else {\n    criteria = idOrCriteria;\n  }\n\n  if ((typeof criteria === 'undefined' ? 'undefined' : _typeof(criteria)) === 'object' && criteria !== null) {\n    resource += '?' + (0, _aureliaPath.buildQueryString)(criteria, traditional);\n  } else if (criteria) {\n    resource += '' + (hasSlash ? '' : '/') + criteria + (hasSlash ? '/' : '');\n  }\n\n  return resource;\n}\n\nvar Config = exports.Config = function () {\n  function Config() {\n    \n\n    this.endpoints = {};\n  }\n\n  Config.prototype.registerEndpoint = function registerEndpoint(name, configureMethod, defaults, restOptions) {\n    var _this = this;\n\n    var newClient = new _aureliaFetchClient.HttpClient();\n    var useTraditionalUriTemplates = void 0;\n\n    if (restOptions !== undefined) {\n      useTraditionalUriTemplates = restOptions.useTraditionalUriTemplates;\n    }\n    this.endpoints[name] = new Rest(newClient, name, useTraditionalUriTemplates);\n\n    if (defaults !== undefined) {\n      this.endpoints[name].defaults = defaults;\n    }\n\n    if (typeof configureMethod === 'function') {\n      newClient.configure(function (newClientConfig) {\n        return configureMethod(newClientConfig.withDefaults(_this.endpoints[name].defaults));\n      });\n\n      this.endpoints[name].defaults = newClient.defaults;\n\n      return this;\n    }\n\n    if (typeof configureMethod !== 'string' && !this.defaultBaseUrl) {\n      return this;\n    }\n\n    if (this.defaultBaseUrl && typeof configureMethod !== 'string' && typeof configureMethod !== 'function') {\n      newClient.configure(function (configure) {\n        configure.withBaseUrl(_this.defaultBaseUrl);\n      });\n\n      return this;\n    }\n\n    newClient.configure(function (configure) {\n      configure.withBaseUrl(configureMethod);\n    });\n\n    return this;\n  };\n\n  Config.prototype.getEndpoint = function getEndpoint(name) {\n    if (!name) {\n      return this.defaultEndpoint || null;\n    }\n\n    return this.endpoints[name] || null;\n  };\n\n  Config.prototype.endpointExists = function endpointExists(name) {\n    return !!this.endpoints[name];\n  };\n\n  Config.prototype.setDefaultEndpoint = function setDefaultEndpoint(name) {\n    this.defaultEndpoint = this.getEndpoint(name);\n\n    return this;\n  };\n\n  Config.prototype.setDefaultBaseUrl = function setDefaultBaseUrl(baseUrl) {\n    this.defaultBaseUrl = baseUrl;\n\n    return this;\n  };\n\n  Config.prototype.configure = function configure(config) {\n    var _this2 = this;\n\n    if (config.defaultBaseUrl) {\n      this.defaultBaseUrl = config.defaultBaseUrl;\n    }\n\n    config.endpoints.forEach(function (endpoint) {\n      _this2.registerEndpoint(endpoint.name, endpoint.endpoint, endpoint.config);\n\n      if (endpoint.default) {\n        _this2.setDefaultEndpoint(endpoint.name);\n      }\n    });\n\n    if (config.defaultEndpoint) {\n      this.setDefaultEndpoint(config.defaultEndpoint);\n    }\n\n    return this;\n  };\n\n  return Config;\n}();\n\nfunction configure(frameworkConfig, configOrConfigure) {\n  var config = frameworkConfig.container.get(Config);\n\n  if (typeof configOrConfigure === 'function') {\n    configOrConfigure(config);\n\n    return;\n  }\n\n  config.configure(configOrConfigure);\n}\n\nvar Endpoint = exports.Endpoint = (_dec = (0, _aureliaDependencyInjection.resolver)(), _dec(_class3 = function () {\n  function Endpoint(key) {\n    \n\n    this._key = key;\n  }\n\n  Endpoint.prototype.get = function get(container) {\n    return container.get(Config).getEndpoint(this._key);\n  };\n\n  Endpoint.of = function of(key) {\n    return new Endpoint(key);\n  };\n\n  return Endpoint;\n}()) || _class3);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///aurelia-api\n");

/***/ }),

/***/ "aurelia-authentication":
/*!*******************************************************************************************!*\
  !*** ./node_modules/aurelia-authentication/dist/native-modules/aurelia-authentication.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.__esModule = true;\nexports.FetchConfig = exports.AuthorizeStep = exports.AuthenticateStep = exports.AuthService = exports.Authentication = exports.OAuth2 = exports.OAuth1 = exports.AuthLock = exports.Storage = exports.BaseConfig = exports.logger = exports.Popup = undefined;\n\nvar _dec, _class2, _dec2, _class3, _dec3, _class4, _dec4, _class5, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _class6, _desc, _value, _class7, _dec12, _dec13, _class8, _desc2, _value2, _class9, _dec14, _class11, _dec15, _class12, _dec16, _class13;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nexports.configure = configure;\n\nvar _extend = __webpack_require__(/*! extend */ \"6dBs\");\n\nvar _extend2 = _interopRequireDefault(_extend);\n\nvar _jwtDecode = __webpack_require__(/*! jwt-decode */ \"BOF4\");\n\nvar _jwtDecode2 = _interopRequireDefault(_jwtDecode);\n\nvar _aureliaPal = __webpack_require__(/*! aurelia-pal */ \"70NS\");\n\nvar _aureliaPath = __webpack_require__(/*! aurelia-path */ \"iD3O\");\n\nvar _aureliaLogging = __webpack_require__(/*! aurelia-logging */ \"MP1E\");\n\nvar _aureliaDependencyInjection = __webpack_require__(/*! aurelia-dependency-injection */ \"3U8n\");\n\nvar _aureliaMetadata = __webpack_require__(/*! aurelia-metadata */ \"qrcG\");\n\nvar _aureliaEventAggregator = __webpack_require__(/*! aurelia-event-aggregator */ \"aurelia-event-aggregator\");\n\nvar _aureliaTemplatingResources = __webpack_require__(/*! aurelia-templating-resources */ \"aurelia-templating-resources\");\n\nvar _aureliaApi = __webpack_require__(/*! aurelia-api */ \"aurelia-api\");\n\nvar _aureliaRouter = __webpack_require__(/*! aurelia-router */ \"4ysu\");\n\nvar _aureliaFetchClient = __webpack_require__(/*! aurelia-fetch-client */ \"aurelia-fetch-client\");\n\nvar _authFilterValueConverter = __webpack_require__(/*! ./authFilterValueConverter */ \"aurelia-authentication/authFilterValueConverter\");\n\nvar _authenticatedValueConverter = __webpack_require__(/*! ./authenticatedValueConverter */ \"CyDa\");\n\nvar _authenticatedFilterValueConverter = __webpack_require__(/*! ./authenticatedFilterValueConverter */ \"Med+\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n\n\n\nvar Popup = exports.Popup = function () {\n  function Popup() {\n    \n\n    this.popupWindow = null;\n    this.polling = null;\n    this.url = '';\n  }\n\n  Popup.prototype.open = function open(url, windowName, options) {\n    this.url = url;\n    var optionsString = buildPopupWindowOptions(options || {});\n\n    this.popupWindow = _aureliaPal.PLATFORM.global.open(url, windowName, optionsString);\n\n    if (this.popupWindow && this.popupWindow.focus) {\n      this.popupWindow.focus();\n    }\n\n    return this;\n  };\n\n  Popup.prototype.eventListener = function eventListener(redirectUri) {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      _this.popupWindow.addEventListener('loadstart', function (event) {\n        if (event.url.indexOf(redirectUri) !== 0) {\n          return;\n        }\n\n        var parser = _aureliaPal.DOM.createElement('a');\n\n        parser.href = event.url;\n\n        if (parser.search || parser.hash) {\n          var qs = parseUrl(parser);\n\n          if (qs.error) {\n            reject({ error: qs.error });\n          } else {\n            resolve(qs);\n          }\n\n          _this.popupWindow.close();\n        }\n      });\n\n      _this.popupWindow.addEventListener('exit', function () {\n        reject({ data: 'Provider Popup was closed' });\n      });\n\n      _this.popupWindow.addEventListener('loaderror', function () {\n        reject({ data: 'Authorization Failed' });\n      });\n    });\n  };\n\n  Popup.prototype.pollPopup = function pollPopup() {\n    var _this2 = this;\n\n    return new Promise(function (resolve, reject) {\n      _this2.polling = _aureliaPal.PLATFORM.global.setInterval(function () {\n        var errorData = void 0;\n\n        try {\n          if (_this2.popupWindow.location.host === _aureliaPal.PLATFORM.global.document.location.host && (_this2.popupWindow.location.search || _this2.popupWindow.location.hash)) {\n            var qs = parseUrl(_this2.popupWindow.location);\n\n            if (qs.error) {\n              reject({ error: qs.error });\n            } else {\n              resolve(qs);\n            }\n\n            _this2.popupWindow.close();\n            _aureliaPal.PLATFORM.global.clearInterval(_this2.polling);\n          }\n        } catch (error) {\n          errorData = error;\n        }\n\n        if (!_this2.popupWindow) {\n          _aureliaPal.PLATFORM.global.clearInterval(_this2.polling);\n          reject({\n            error: errorData,\n            data: 'Provider Popup Blocked'\n          });\n        } else if (_this2.popupWindow.closed) {\n          _aureliaPal.PLATFORM.global.clearInterval(_this2.polling);\n          reject({\n            error: errorData,\n            data: 'Problem poll popup'\n          });\n        }\n      }, 35);\n    });\n  };\n\n  return Popup;\n}();\n\nvar buildPopupWindowOptions = function buildPopupWindowOptions(options) {\n  var width = options.width || 500;\n  var height = options.height || 500;\n\n  var extended = (0, _extend2.default)({\n    width: width,\n    height: height,\n    left: _aureliaPal.PLATFORM.global.screenX + (_aureliaPal.PLATFORM.global.outerWidth - width) / 2,\n    top: _aureliaPal.PLATFORM.global.screenY + (_aureliaPal.PLATFORM.global.outerHeight - height) / 2.5\n  }, options);\n\n  var parts = [];\n\n  Object.keys(extended).map(function (key) {\n    return parts.push(key + '=' + extended[key]);\n  });\n\n  return parts.join(',');\n};\n\nvar parseUrl = function parseUrl(url) {\n  var hash = url.hash.charAt(0) === '#' ? url.hash.substr(1) : url.hash;\n\n  return (0, _extend2.default)(true, {}, (0, _aureliaPath.parseQueryString)(url.search), (0, _aureliaPath.parseQueryString)(hash));\n};\n\nvar logger = exports.logger = (0, _aureliaLogging.getLogger)('aurelia-authentication');\n\nvar BaseConfig = exports.BaseConfig = function () {\n  function BaseConfig() {\n    \n\n    this.client = null;\n    this.endpoint = null;\n    this.configureEndpoints = null;\n    this.loginRedirect = '#/';\n    this.logoutRedirect = '#/';\n    this.loginRoute = '/login';\n    this.loginOnSignup = true;\n    this.signupRedirect = '#/login';\n    this.expiredRedirect = '#/';\n    this.storageChangedRedirect = '#/';\n    this.baseUrl = '';\n    this.loginUrl = '/auth/login';\n    this.logoutUrl = null;\n    this.logoutMethod = 'get';\n    this.signupUrl = '/auth/signup';\n    this.profileUrl = '/auth/me';\n    this.profileMethod = 'put';\n    this.unlinkUrl = '/auth/unlink/';\n    this.unlinkMethod = 'get';\n    this.refreshTokenUrl = null;\n    this.authHeader = 'Authorization';\n    this.authTokenType = 'Bearer';\n    this.logoutOnInvalidToken = false;\n    this.accessTokenProp = 'access_token';\n    this.accessTokenName = 'token';\n    this.accessTokenRoot = false;\n    this.useRefreshToken = false;\n    this.autoUpdateToken = true;\n    this.clientId = false;\n    this.clientSecret = null;\n    this.refreshTokenProp = 'refresh_token';\n    this.refreshTokenSubmitProp = 'refresh_token';\n    this.keepOldResponseProperties = false;\n    this.refreshTokenName = 'token';\n    this.refreshTokenRoot = false;\n    this.idTokenProp = 'id_token';\n    this.idTokenName = 'token';\n    this.idTokenRoot = false;\n    this.httpInterceptor = true;\n    this.withCredentials = true;\n    this.platform = 'browser';\n    this.storage = 'localStorage';\n    this.storageKey = 'aurelia_authentication';\n    this.storageChangedReload = false;\n    this.getExpirationDateFromResponse = null;\n    this.getAccessTokenFromResponse = null;\n    this.getRefreshTokenFromResponse = null;\n    this.globalValueConverters = ['authFilterValueConverter'];\n    this.defaultHeadersForTokenRequests = {\n      'Content-Type': 'application/json'\n    };\n    this.providers = {\n      facebook: {\n        name: 'facebook',\n        url: '/auth/facebook',\n        authorizationEndpoint: 'https://www.facebook.com/v2.5/dialog/oauth',\n        redirectUri: _aureliaPal.PLATFORM.location.origin + '/',\n        requiredUrlParams: ['display', 'scope'],\n        scope: ['email'],\n        scopeDelimiter: ',',\n        display: 'popup',\n        oauthType: '2.0',\n        popupOptions: { width: 580, height: 400 }\n      },\n      google: {\n        name: 'google',\n        url: '/auth/google',\n        authorizationEndpoint: 'https://accounts.google.com/o/oauth2/auth',\n        redirectUri: _aureliaPal.PLATFORM.location.origin,\n        requiredUrlParams: ['scope'],\n        optionalUrlParams: ['display', 'state'],\n        scope: ['profile', 'email'],\n        scopePrefix: 'openid',\n        scopeDelimiter: ' ',\n        display: 'popup',\n        oauthType: '2.0',\n        popupOptions: { width: 452, height: 633 },\n        state: randomState\n      },\n      github: {\n        name: 'github',\n        url: '/auth/github',\n        authorizationEndpoint: 'https://github.com/login/oauth/authorize',\n        redirectUri: _aureliaPal.PLATFORM.location.origin,\n        optionalUrlParams: ['scope'],\n        scope: ['user:email'],\n        scopeDelimiter: ' ',\n        oauthType: '2.0',\n        popupOptions: { width: 1020, height: 618 }\n      },\n      instagram: {\n        name: 'instagram',\n        url: '/auth/instagram',\n        authorizationEndpoint: 'https://api.instagram.com/oauth/authorize',\n        redirectUri: _aureliaPal.PLATFORM.location.origin,\n        requiredUrlParams: ['scope'],\n        scope: ['basic'],\n        scopeDelimiter: '+',\n        oauthType: '2.0'\n      },\n      linkedin: {\n        name: 'linkedin',\n        url: '/auth/linkedin',\n        authorizationEndpoint: 'https://www.linkedin.com/uas/oauth2/authorization',\n        redirectUri: _aureliaPal.PLATFORM.location.origin,\n        requiredUrlParams: ['state'],\n        scope: ['r_emailaddress'],\n        scopeDelimiter: ' ',\n        state: 'STATE',\n        oauthType: '2.0',\n        popupOptions: { width: 527, height: 582 }\n      },\n      twitter: {\n        name: 'twitter',\n        url: '/auth/twitter',\n        authorizationEndpoint: 'https://api.twitter.com/oauth/authenticate',\n        redirectUri: _aureliaPal.PLATFORM.location.origin,\n        oauthType: '1.0',\n        popupOptions: { width: 495, height: 645 }\n      },\n      twitch: {\n        name: 'twitch',\n        url: '/auth/twitch',\n        authorizationEndpoint: 'https://api.twitch.tv/kraken/oauth2/authorize',\n        redirectUri: _aureliaPal.PLATFORM.location.origin,\n        requiredUrlParams: ['scope'],\n        scope: ['user_read'],\n        scopeDelimiter: ' ',\n        display: 'popup',\n        oauthType: '2.0',\n        popupOptions: { width: 500, height: 560 }\n      },\n      live: {\n        name: 'live',\n        url: '/auth/live',\n        authorizationEndpoint: 'https://login.live.com/oauth20_authorize.srf',\n        redirectUri: _aureliaPal.PLATFORM.location.origin,\n        requiredUrlParams: ['display', 'scope'],\n        scope: ['wl.emails'],\n        scopeDelimiter: ' ',\n        display: 'popup',\n        oauthType: '2.0',\n        popupOptions: { width: 500, height: 560 }\n      },\n      yahoo: {\n        name: 'yahoo',\n        url: '/auth/yahoo',\n        authorizationEndpoint: 'https://api.login.yahoo.com/oauth2/request_auth',\n        redirectUri: _aureliaPal.PLATFORM.location.origin,\n        scope: [],\n        scopeDelimiter: ',',\n        oauthType: '2.0',\n        popupOptions: { width: 559, height: 519 }\n      },\n      bitbucket: {\n        name: 'bitbucket',\n        url: '/auth/bitbucket',\n        authorizationEndpoint: 'https://bitbucket.org/site/oauth2/authorize',\n        redirectUri: _aureliaPal.PLATFORM.location.origin + '/',\n        requiredUrlParams: ['scope'],\n        scope: ['email'],\n        scopeDelimiter: ' ',\n        oauthType: '2.0',\n        popupOptions: { width: 1028, height: 529 }\n      },\n      azure_ad: {\n        name: 'azure_ad',\n        url: '/auth/azure_ad',\n        authorizationEndpoint: 'https://login.microsoftonline.com/common/oauth2/v2.0/authorize',\n        redirectUri: window.location.origin,\n        logoutEndpoint: 'https://login.microsoftonline.com/common/oauth2/v2.0/logout',\n        postLogoutRedirectUri: window.location.origin,\n        requiredUrlParams: ['scope'],\n        scope: ['user.read'],\n        scopeDelimiter: ' ',\n        oauthType: '2.0'\n      },\n      auth0: {\n        name: 'auth0',\n        oauthType: 'auth0-lock',\n        clientId: 'your_client_id',\n        clientDomain: 'your_domain_url',\n        display: 'popup',\n        lockOptions: {},\n        responseType: 'token',\n        state: randomState\n      }\n    };\n    this._authToken = 'Bearer';\n    this._responseTokenProp = 'access_token';\n    this._tokenName = 'token';\n    this._tokenRoot = false;\n    this._tokenPrefix = 'aurelia';\n    this._logoutOnInvalidtoken = false;\n  }\n\n  BaseConfig.prototype.joinBase = function joinBase(url) {\n    return (0, _aureliaPath.join)(this.baseUrl, url);\n  };\n\n  BaseConfig.prototype.configure = function configure(incoming) {\n    for (var key in incoming) {\n      if (incoming.hasOwnProperty(key)) {\n        var value = incoming[key];\n\n        if (value !== undefined) {\n          if (Array.isArray(value) || (typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object' || value === null) {\n            this[key] = value;\n          } else {\n            (0, _extend2.default)(true, this[key], value);\n          }\n        }\n      }\n    }\n  };\n\n  BaseConfig.prototype.getOptionsForTokenRequests = function getOptionsForTokenRequests() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    return (0, _extend2.default)(true, {}, { headers: this.defaultHeadersForTokenRequests }, options);\n  };\n\n  _createClass(BaseConfig, [{\n    key: 'authToken',\n    set: function set(authToken) {\n      logger.warn('BaseConfig.authToken is deprecated. Use BaseConfig.authTokenType instead.');\n      this._authTokenType = authToken;\n      this.authTokenType = authToken;\n\n      return authToken;\n    },\n    get: function get() {\n      return this._authTokenType;\n    }\n  }, {\n    key: 'responseTokenProp',\n    set: function set(responseTokenProp) {\n      logger.warn('BaseConfig.responseTokenProp is deprecated. Use BaseConfig.accessTokenProp instead.');\n      this._responseTokenProp = responseTokenProp;\n      this.accessTokenProp = responseTokenProp;\n\n      return responseTokenProp;\n    },\n    get: function get() {\n      return this._responseTokenProp;\n    }\n  }, {\n    key: 'tokenRoot',\n    set: function set(tokenRoot) {\n      logger.warn('BaseConfig.tokenRoot is deprecated. Use BaseConfig.accessTokenRoot instead.');\n      this._tokenRoot = tokenRoot;\n      this.accessTokenRoot = tokenRoot;\n\n      return tokenRoot;\n    },\n    get: function get() {\n      return this._tokenRoot;\n    }\n  }, {\n    key: 'tokenName',\n    set: function set(tokenName) {\n      logger.warn('BaseConfig.tokenName is deprecated. Use BaseConfig.accessTokenName instead.');\n      this._tokenName = tokenName;\n      this.accessTokenName = tokenName;\n\n      return tokenName;\n    },\n    get: function get() {\n      return this._tokenName;\n    }\n  }, {\n    key: 'tokenPrefix',\n    set: function set(tokenPrefix) {\n      logger.warn('BaseConfig.tokenPrefix is obsolete. Use BaseConfig.storageKey instead.');\n      this._tokenPrefix = tokenPrefix;\n\n      return tokenPrefix;\n    },\n    get: function get() {\n      return this._tokenPrefix || 'aurelia';\n    }\n  }, {\n    key: 'current',\n    get: function get() {\n      logger.warn('Getter BaseConfig.current is deprecated. Use BaseConfig directly instead.');\n\n      return this;\n    },\n    set: function set(_) {\n      throw new Error('Setter BaseConfig.current has been removed. Use BaseConfig directly instead.');\n    }\n  }, {\n    key: '_current',\n    get: function get() {\n      logger.warn('Getter BaseConfig._current is deprecated. Use BaseConfig directly instead.');\n\n      return this;\n    },\n    set: function set(_) {\n      throw new Error('Setter BaseConfig._current has been removed. Use BaseConfig directly instead.');\n    }\n  }, {\n    key: 'logoutOnInvalidtoken',\n    set: function set(logoutOnInvalidtoken) {\n      logger.warn('BaseConfig.logoutOnInvalidtoken is obsolete. Use BaseConfig.logoutOnInvalidToken instead.');\n      this._logoutOnInvalidtoken = logoutOnInvalidtoken;\n      this.logoutOnInvalidToken = logoutOnInvalidtoken;\n\n      return logoutOnInvalidtoken;\n    },\n    get: function get() {\n      return this._logoutOnInvalidtoken;\n    }\n  }]);\n\n  return BaseConfig;\n}();\n\nfunction randomState() {\n  var rand = Math.random().toString(36).substr(2);\n\n  return encodeURIComponent(rand);\n}\n\nvar Storage = exports.Storage = (_dec = (0, _aureliaDependencyInjection.inject)(BaseConfig), _dec(_class2 = function () {\n  function Storage(config) {\n    \n\n    this.config = config;\n  }\n\n  Storage.prototype.get = function get(key) {\n    return _aureliaPal.PLATFORM.global[this.config.storage].getItem(key);\n  };\n\n  Storage.prototype.set = function set(key, value) {\n    _aureliaPal.PLATFORM.global[this.config.storage].setItem(key, value);\n  };\n\n  Storage.prototype.remove = function remove(key) {\n    _aureliaPal.PLATFORM.global[this.config.storage].removeItem(key);\n  };\n\n  return Storage;\n}()) || _class2);\nvar AuthLock = exports.AuthLock = (_dec2 = (0, _aureliaDependencyInjection.inject)(Storage, BaseConfig), _dec2(_class3 = function () {\n  function AuthLock(storage, config) {\n    \n\n    this.storage = storage;\n    this.config = config;\n    this.defaults = {\n      name: null,\n      state: null,\n      scope: null,\n      scopeDelimiter: ' ',\n      redirectUri: null,\n      clientId: null,\n      clientDomain: null,\n      display: 'popup',\n      lockOptions: {},\n      popupOptions: null,\n      responseType: 'token'\n    };\n  }\n\n  AuthLock.prototype.open = function open(options, userData) {\n    var _this3 = this;\n\n    if (typeof _aureliaPal.PLATFORM.global.Auth0Lock !== 'function') {\n      throw new Error('Auth0Lock was not found in global scope. Please load it before using this provider.');\n    }\n    var provider = (0, _extend2.default)(true, {}, this.defaults, options);\n    var stateName = provider.name + '_state';\n\n    if (typeof provider.state === 'function') {\n      this.storage.set(stateName, provider.state());\n    } else if (typeof provider.state === 'string') {\n      this.storage.set(stateName, provider.state);\n    }\n\n    var opts = {\n      auth: {\n        params: {}\n      }\n    };\n\n    if (Array.isArray(provider.scope) && provider.scope.length) {\n      opts.auth.params.scope = provider.scope.join(provider.scopeDelimiter);\n    }\n    if (provider.state) {\n      opts.auth.params.state = this.storage.get(provider.name + '_state');\n    }\n    if (provider.display === 'popup') {\n      opts.auth.redirect = false;\n    } else if (typeof provider.redirectUri === 'string') {\n      opts.auth.redirect = true;\n      opts.auth.redirectUrl = provider.redirectUri;\n    }\n    if (_typeof(provider.popupOptions) === 'object') {\n      opts.popupOptions = provider.popupOptions;\n    }\n    if (typeof provider.responseType === 'string') {\n      opts.auth.responseType = provider.responseType;\n    }\n    var lockOptions = (0, _extend2.default)(true, {}, provider.lockOptions, opts);\n\n    this.lock = this.lock || new _aureliaPal.PLATFORM.global.Auth0Lock(provider.clientId, provider.clientDomain, lockOptions);\n\n    var openPopup = new Promise(function (resolve, reject) {\n      _this3.lock.on('authenticated', function (authResponse) {\n        if (!lockOptions.auth.redirect) {\n          _this3.lock.hide();\n        }\n        resolve({\n          access_token: authResponse.accessToken,\n          id_token: authResponse.idToken\n        });\n      });\n      _this3.lock.on('unrecoverable_error', function (err) {\n        if (!lockOptions.auth.redirect) {\n          _this3.lock.hide();\n        }\n        reject(err);\n      });\n      _this3.lock.show();\n    });\n\n    return openPopup.then(function (lockResponse) {\n      if (provider.responseType === 'token' || provider.responseType === 'id_token%20token' || provider.responseType === 'token%20id_token' || provider.responseType === 'token id_token') {\n        return lockResponse;\n      }\n\n      throw new Error('Only `token` responseType is supported');\n    });\n  };\n\n  return AuthLock;\n}()) || _class3);\nvar OAuth1 = exports.OAuth1 = (_dec3 = (0, _aureliaDependencyInjection.inject)(Storage, Popup, BaseConfig), _dec3(_class4 = function () {\n  function OAuth1(storage, popup, config) {\n    \n\n    this.storage = storage;\n    this.config = config;\n    this.popup = popup;\n    this.defaults = {\n      url: null,\n      name: null,\n      popupOptions: null,\n      redirectUri: null,\n      authorizationEndpoint: null\n    };\n  }\n\n  OAuth1.prototype.open = function open(options, userData) {\n    var _this4 = this;\n\n    var provider = (0, _extend2.default)(true, {}, this.defaults, options);\n    var serverUrl = this.config.joinBase(provider.url);\n\n    if (this.config.platform !== 'mobile') {\n      this.popup = this.popup.open('', provider.name, provider.popupOptions);\n    }\n\n    return this.config.client.post(serverUrl).then(function (response) {\n      var url = provider.authorizationEndpoint + '?' + (0, _aureliaPath.buildQueryString)(response);\n\n      if (_this4.config.platform === 'mobile') {\n        _this4.popup = _this4.popup.open(url, provider.name, provider.popupOptions);\n      } else {\n        _this4.popup.popupWindow.location = url;\n      }\n\n      var popupListener = _this4.config.platform === 'mobile' ? _this4.popup.eventListener(provider.redirectUri) : _this4.popup.pollPopup();\n\n      return popupListener.then(function (result) {\n        return _this4.exchangeForToken(result, userData, provider);\n      });\n    });\n  };\n\n  OAuth1.prototype.exchangeForToken = function exchangeForToken(oauthData, userData, provider) {\n    var data = (0, _extend2.default)(true, {}, userData, oauthData);\n    var serverUrl = this.config.joinBase(provider.url);\n    var credentials = this.config.withCredentials ? 'include' : 'same-origin';\n\n    return this.config.client.post(serverUrl, data, { credentials: credentials });\n  };\n\n  return OAuth1;\n}()) || _class4);\nvar OAuth2 = exports.OAuth2 = (_dec4 = (0, _aureliaDependencyInjection.inject)(Storage, Popup, BaseConfig), _dec4(_class5 = function () {\n  function OAuth2(storage, popup, config) {\n    \n\n    this.storage = storage;\n    this.config = config;\n    this.popup = popup;\n    this.defaults = {\n      url: null,\n      name: null,\n      state: null,\n      scope: null,\n      scopeDelimiter: null,\n      redirectUri: null,\n      popupOptions: null,\n      authorizationEndpoint: null,\n      responseParams: null,\n      requiredUrlParams: null,\n      optionalUrlParams: null,\n      defaultUrlParams: ['response_type', 'client_id', 'redirect_uri'],\n      responseType: 'code'\n    };\n  }\n\n  OAuth2.prototype.open = function open(options, userData) {\n    var _this5 = this;\n\n    var provider = (0, _extend2.default)(true, {}, this.defaults, options);\n    var stateName = provider.name + '_state';\n\n    if (typeof provider.state === 'function') {\n      this.storage.set(stateName, provider.state());\n    } else if (typeof provider.state === 'string') {\n      this.storage.set(stateName, provider.state);\n    }\n\n    var url = provider.authorizationEndpoint + '?' + (0, _aureliaPath.buildQueryString)(this.buildQuery(provider));\n    var popup = this.popup.open(url, provider.name, provider.popupOptions);\n    var openPopup = this.config.platform === 'mobile' ? popup.eventListener(provider.redirectUri) : popup.pollPopup();\n\n    return openPopup.then(function (oauthData) {\n      if (provider.responseType === 'token' || provider.responseType === 'id_token token' || provider.responseType === 'token id_token') {\n        return oauthData;\n      }\n      if (oauthData.state && oauthData.state !== _this5.storage.get(stateName)) {\n        return Promise.reject('OAuth 2.0 state parameter mismatch.');\n      }\n\n      return _this5.exchangeForToken(oauthData, userData, provider);\n    });\n  };\n\n  OAuth2.prototype.exchangeForToken = function exchangeForToken(oauthData, userData, provider) {\n    var data = (0, _extend2.default)(true, {}, userData, {\n      clientId: provider.clientId,\n      redirectUri: provider.redirectUri\n    }, oauthData);\n\n    var serverUrl = this.config.joinBase(provider.url);\n    var credentials = this.config.withCredentials ? 'include' : 'same-origin';\n\n    return this.config.client.post(serverUrl, data, { credentials: credentials });\n  };\n\n  OAuth2.prototype.buildQuery = function buildQuery(provider) {\n    var _this6 = this;\n\n    var query = {};\n    var urlParams = ['defaultUrlParams', 'requiredUrlParams', 'optionalUrlParams'];\n\n    urlParams.forEach(function (params) {\n      (provider[params] || []).forEach(function (paramName) {\n        var camelizedName = camelCase(paramName);\n        var paramValue = typeof provider[paramName] === 'function' ? provider[paramName]() : provider[camelizedName];\n\n        if (paramName === 'state') {\n          paramValue = encodeURIComponent(_this6.storage.get(provider.name + '_state'));\n        }\n\n        if (paramName === 'scope' && Array.isArray(paramValue)) {\n          paramValue = paramValue.join(provider.scopeDelimiter);\n\n          if (provider.scopePrefix) {\n            paramValue = provider.scopePrefix + provider.scopeDelimiter + paramValue;\n          }\n        }\n\n        query[paramName] = paramValue;\n      });\n    });\n\n    return query;\n  };\n\n  OAuth2.prototype.close = function close(options) {\n    var provider = (0, _extend2.default)(true, {}, this.defaults, options);\n    var url = provider.logoutEndpoint + '?' + (0, _aureliaPath.buildQueryString)(this.buildLogoutQuery(provider));\n    var popup = this.popup.open(url, provider.name, provider.popupOptions);\n    var openPopup = this.config.platform === 'mobile' ? popup.eventListener(provider.postLogoutRedirectUri) : popup.pollPopup();\n\n    return openPopup;\n  };\n\n  OAuth2.prototype.buildLogoutQuery = function buildLogoutQuery(provider) {\n    var query = {};\n    var authResponse = this.storage.get(this.config.storageKey);\n\n    if (provider.postLogoutRedirectUri) {\n      query.post_logout_redirect_uri = provider.postLogoutRedirectUri;\n    }\n    if (this.storage.get(provider.name + '_state')) {\n      query.state = this.storage.get(provider.name + '_state');\n    }\n    if (JSON.parse(authResponse).id_token) {\n      query.id_token_hint = JSON.parse(authResponse).id_token;\n    }\n\n    return query;\n  };\n\n  return OAuth2;\n}()) || _class5);\n\nfunction camelCase(name) {\n  return name.replace(/([:\\-_]+(.))/g, function (_, separator, letter, offset) {\n    return offset ? letter.toUpperCase() : letter;\n  });\n}\n\nvar Authentication = exports.Authentication = (_dec5 = (0, _aureliaDependencyInjection.inject)(Storage, BaseConfig, OAuth1, OAuth2, AuthLock), _dec6 = (0, _aureliaMetadata.deprecated)({ message: 'Use baseConfig.loginRoute instead.' }), _dec7 = (0, _aureliaMetadata.deprecated)({ message: 'Use baseConfig.loginRedirect instead.' }), _dec8 = (0, _aureliaMetadata.deprecated)({ message: 'Use baseConfig.joinBase(baseConfig.loginUrl) instead.' }), _dec9 = (0, _aureliaMetadata.deprecated)({ message: 'Use baseConfig.joinBase(baseConfig.signupUrl) instead.' }), _dec10 = (0, _aureliaMetadata.deprecated)({ message: 'Use baseConfig.joinBase(baseConfig.profileUrl) instead.' }), _dec11 = (0, _aureliaMetadata.deprecated)({ message: 'Use .getAccessToken() instead.' }), _dec5(_class6 = (_class7 = function () {\n  function Authentication(storage, config, oAuth1, oAuth2, auth0Lock) {\n    \n\n    this.storage = storage;\n    this.config = config;\n    this.oAuth1 = oAuth1;\n    this.oAuth2 = oAuth2;\n    this.auth0Lock = auth0Lock;\n    this.updateTokenCallstack = [];\n    this.accessToken = null;\n    this.refreshToken = null;\n    this.idToken = null;\n    this.payload = null;\n    this.exp = null;\n    this.responseAnalyzed = false;\n  }\n\n  Authentication.prototype.getLoginRoute = function getLoginRoute() {\n    return this.config.loginRoute;\n  };\n\n  Authentication.prototype.getLoginRedirect = function getLoginRedirect() {\n    return this.config.loginRedirect;\n  };\n\n  Authentication.prototype.getLoginUrl = function getLoginUrl() {\n    return this.Config.joinBase(this.config.loginUrl);\n  };\n\n  Authentication.prototype.getSignupUrl = function getSignupUrl() {\n    return this.Config.joinBase(this.config.signupUrl);\n  };\n\n  Authentication.prototype.getProfileUrl = function getProfileUrl() {\n    return this.Config.joinBase(this.config.profileUrl);\n  };\n\n  Authentication.prototype.getToken = function getToken() {\n    return this.getAccessToken();\n  };\n\n  Authentication.prototype.getResponseObject = function getResponseObject() {\n    return JSON.parse(this.storage.get(this.config.storageKey));\n  };\n\n  Authentication.prototype.setResponseObject = function setResponseObject(response) {\n    if (response) {\n      if (this.config.keepOldResponseProperties) {\n        var oldResponse = this.getResponseObject();\n\n        response = Object.assign({}, oldResponse, response);\n      }\n      this.getDataFromResponse(response);\n      this.storage.set(this.config.storageKey, JSON.stringify(response));\n\n      return;\n    }\n    this.accessToken = null;\n    this.refreshToken = null;\n    this.idToken = null;\n    this.payload = null;\n    this.exp = null;\n    this.responseAnalyzed = false;\n\n    this.storage.remove(this.config.storageKey);\n  };\n\n  Authentication.prototype.getAccessToken = function getAccessToken() {\n    if (!this.responseAnalyzed) this.getDataFromResponse(this.getResponseObject());\n\n    return this.accessToken;\n  };\n\n  Authentication.prototype.getRefreshToken = function getRefreshToken() {\n    if (!this.responseAnalyzed) this.getDataFromResponse(this.getResponseObject());\n\n    return this.refreshToken;\n  };\n\n  Authentication.prototype.getIdToken = function getIdToken() {\n    if (!this.responseAnalyzed) this.getDataFromResponse(this.getResponseObject());\n\n    return this.idToken;\n  };\n\n  Authentication.prototype.getPayload = function getPayload() {\n    if (!this.responseAnalyzed) this.getDataFromResponse(this.getResponseObject());\n\n    return this.payload;\n  };\n\n  Authentication.prototype.getIdPayload = function getIdPayload() {\n    if (!this.responseAnalyzed) this.getDataFromResponse(this.getResponseObject());\n\n    return this.idPayload;\n  };\n\n  Authentication.prototype.getExp = function getExp() {\n    if (!this.responseAnalyzed) this.getDataFromResponse(this.getResponseObject());\n\n    return this.exp;\n  };\n\n  Authentication.prototype.getTtl = function getTtl() {\n    var exp = this.getExp();\n\n    return Number.isNaN(exp) ? NaN : exp - Math.round(new Date().getTime() / 1000);\n  };\n\n  Authentication.prototype.isTokenExpired = function isTokenExpired() {\n    var timeLeft = this.getTtl();\n\n    return Number.isNaN(timeLeft) ? undefined : timeLeft < 0;\n  };\n\n  Authentication.prototype.isAuthenticated = function isAuthenticated() {\n    return !!this.getAccessToken() && !this.isTokenExpired();\n  };\n\n  Authentication.prototype.getDataFromResponse = function getDataFromResponse(response) {\n    var config = this.config;\n\n    this.accessToken = typeof this.config.getAccessTokenFromResponse === 'function' ? this.config.getAccessTokenFromResponse(response) : this.getTokenFromResponse(response, config.accessTokenProp, config.accessTokenName, config.accessTokenRoot);\n\n    this.refreshToken = null;\n    if (config.useRefreshToken) {\n      try {\n        this.refreshToken = typeof this.config.getRefreshTokenFromResponse === 'function' ? this.config.getRefreshTokenFromResponse(response) : this.getTokenFromResponse(response, config.refreshTokenProp, config.refreshTokenName, config.refreshTokenRoot);\n      } catch (e) {\n        this.refreshToken = null;\n\n        logger.warn('useRefreshToken is set, but could not extract a refresh token');\n      }\n    }\n\n    this.idToken = null;\n    try {\n      this.idToken = this.getTokenFromResponse(response, config.idTokenProp, config.idTokenName, config.idTokenRoot);\n    } catch (e) {\n      this.idToken = null;\n    }\n\n    this.payload = getPayload(this.accessToken);\n    this.idPayload = getPayload(this.idToken);\n\n    this.exp = parseInt(typeof this.config.getExpirationDateFromResponse === 'function' ? this.config.getExpirationDateFromResponse(response) : this.payload && this.payload.exp, 10) || NaN;\n\n    this.responseAnalyzed = true;\n\n    return {\n      accessToken: this.accessToken,\n      refreshToken: this.refreshToken,\n      idToken: this.idToken,\n      payload: this.payload,\n      exp: this.exp\n    };\n  };\n\n  Authentication.prototype.getTokenFromResponse = function getTokenFromResponse(response, tokenProp, tokenName, tokenRoot) {\n    if (!response) return undefined;\n\n    var responseTokenProp = tokenProp.split('.').reduce(function (o, x) {\n      return o[x];\n    }, response);\n\n    if (typeof responseTokenProp === 'string') {\n      return responseTokenProp;\n    }\n\n    if ((typeof responseTokenProp === 'undefined' ? 'undefined' : _typeof(responseTokenProp)) === 'object') {\n      var tokenRootData = tokenRoot && tokenRoot.split('.').reduce(function (o, x) {\n        return o[x];\n      }, responseTokenProp);\n      var _token = tokenRootData ? tokenRootData[tokenName] : responseTokenProp[tokenName];\n\n      if (!_token) {\n        var error = new Error('Token not found in response');\n\n        error.responseObject = response;\n        throw error;\n      }\n\n      return _token;\n    }\n\n    var token = response[tokenName] === undefined ? null : response[tokenName];\n\n    if (!token) {\n      var _error = new Error('Token not found in response');\n\n      _error.responseObject = response;\n      throw _error;\n    }\n\n    return token;\n  };\n\n  Authentication.prototype.toUpdateTokenCallstack = function toUpdateTokenCallstack() {\n    var _this7 = this;\n\n    return new Promise(function (resolve) {\n      return _this7.updateTokenCallstack.push(resolve);\n    });\n  };\n\n  Authentication.prototype.resolveUpdateTokenCallstack = function resolveUpdateTokenCallstack(response) {\n    this.updateTokenCallstack.map(function (resolve) {\n      return resolve(response);\n    });\n    this.updateTokenCallstack = [];\n  };\n\n  Authentication.prototype.authenticate = function authenticate(name) {\n    var userData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var oauthType = this.config.providers[name].type;\n\n    if (oauthType) {\n      logger.warn('DEPRECATED: Setting provider.type is deprecated and replaced by provider.oauthType');\n    } else {\n      oauthType = this.config.providers[name].oauthType;\n    }\n\n    var providerLogin = void 0;\n\n    if (oauthType === 'auth0-lock') {\n      providerLogin = this.auth0Lock;\n    } else {\n      providerLogin = oauthType === '1.0' ? this.oAuth1 : this.oAuth2;\n    }\n\n    return providerLogin.open(this.config.providers[name], userData);\n  };\n\n  Authentication.prototype.logout = function logout(name) {\n    var rtnValue = Promise.resolve('Not Applicable');\n\n    if (this.config.providers[name].oauthType !== '2.0' || !this.config.providers[name].logoutEndpoint) {\n      return rtnValue;\n    }\n\n    return this.oAuth2.close(this.config.providers[name]);\n  };\n\n  Authentication.prototype.redirect = function redirect(redirectUrl, defaultRedirectUrl, query) {\n    if (redirectUrl === true) {\n      logger.warn('DEPRECATED: Setting redirectUrl === true to actually *not redirect* is deprecated. Set redirectUrl === \\'\\' instead.');\n\n      return;\n    }\n\n    if (redirectUrl === false) {\n      logger.warn('BREAKING CHANGE: Setting redirectUrl === false to actually *do redirect* is deprecated. Set redirectUrl to undefined or null to use the defaultRedirectUrl if so desired.');\n    }\n\n    if (redirectUrl === 0) {\n      logger.warn('BREAKING CHANGE: Setting redirectUrl === 0 is deprecated. Set redirectUrl to \\'\\' instead.');\n\n      return;\n    }\n\n    if (redirectUrl === '') {\n      return;\n    }\n\n    if (typeof redirectUrl === 'string') {\n      _aureliaPal.PLATFORM.location.href = encodeURI(redirectUrl + (query ? '?' + (0, _aureliaPath.buildQueryString)(query) : ''));\n    } else if (defaultRedirectUrl) {\n      _aureliaPal.PLATFORM.location.href = defaultRedirectUrl + (query ? '?' + (0, _aureliaPath.buildQueryString)(query) : '');\n    }\n  };\n\n  _createClass(Authentication, [{\n    key: 'responseObject',\n    get: function get() {\n      logger.warn('Getter Authentication.responseObject is deprecated. Use Authentication.getResponseObject() instead.');\n\n      return this.getResponseObject();\n    },\n    set: function set(response) {\n      logger.warn('Setter Authentication.responseObject is deprecated. Use AuthServive.setResponseObject(response) instead.');\n      this.setResponseObject(response);\n    }\n  }, {\n    key: 'hasDataStored',\n    get: function get() {\n      logger.warn('Authentication.hasDataStored is deprecated. Use Authentication.responseAnalyzed instead.');\n\n      return this.responseAnalyzed;\n    }\n  }]);\n\n  return Authentication;\n}(), (_applyDecoratedDescriptor(_class7.prototype, 'getLoginRoute', [_dec6], Object.getOwnPropertyDescriptor(_class7.prototype, 'getLoginRoute'), _class7.prototype), _applyDecoratedDescriptor(_class7.prototype, 'getLoginRedirect', [_dec7], Object.getOwnPropertyDescriptor(_class7.prototype, 'getLoginRedirect'), _class7.prototype), _applyDecoratedDescriptor(_class7.prototype, 'getLoginUrl', [_dec8], Object.getOwnPropertyDescriptor(_class7.prototype, 'getLoginUrl'), _class7.prototype), _applyDecoratedDescriptor(_class7.prototype, 'getSignupUrl', [_dec9], Object.getOwnPropertyDescriptor(_class7.prototype, 'getSignupUrl'), _class7.prototype), _applyDecoratedDescriptor(_class7.prototype, 'getProfileUrl', [_dec10], Object.getOwnPropertyDescriptor(_class7.prototype, 'getProfileUrl'), _class7.prototype), _applyDecoratedDescriptor(_class7.prototype, 'getToken', [_dec11], Object.getOwnPropertyDescriptor(_class7.prototype, 'getToken'), _class7.prototype)), _class7)) || _class6);\n\nfunction getPayload(token) {\n  var payload = null;\n\n  try {\n    payload = token ? (0, _jwtDecode2.default)(token) : null;\n  } catch (_) {}\n\n  return payload;\n}\n\nvar AuthService = exports.AuthService = (_dec12 = (0, _aureliaDependencyInjection.inject)(Authentication, BaseConfig, _aureliaTemplatingResources.BindingSignaler, _aureliaEventAggregator.EventAggregator), _dec13 = (0, _aureliaMetadata.deprecated)({ message: 'Use .getAccessToken() instead.' }), _dec12(_class8 = (_class9 = function () {\n  function AuthService(authentication, config, bindingSignaler, eventAggregator) {\n    var _this8 = this;\n\n    \n\n    this.authenticated = false;\n    this.timeoutID = 0;\n\n    this.storageEventHandler = function (event) {\n      if (event.key !== _this8.config.storageKey || event.newValue === event.oldValue) {\n        return;\n      }\n\n      if (event.newValue) {\n        _this8.authentication.storage.set(_this8.config.storageKey, event.newValue);\n      } else {\n        _this8.authentication.storage.remove(_this8.config.storageKey);\n      }\n\n      if (event.newValue && _this8.config.autoUpdateToken && _this8.authentication.getAccessToken() && _this8.authentication.getRefreshToken()) {\n        _this8.setResponseObject(_this8.authentication.getResponseObject());\n\n        return;\n      }\n\n      logger.info('Stored token changed event');\n\n      var wasAuthenticated = _this8.authenticated;\n\n      _this8.authentication.responseAnalyzed = false;\n      _this8.updateAuthenticated();\n\n      if (wasAuthenticated === _this8.authenticated) {\n        return;\n      }\n\n      if (_this8.config.storageChangedRedirect) {\n        _aureliaPal.PLATFORM.location.href = _this8.config.storageChangedRedirect;\n      }\n\n      if (_this8.config.storageChangedReload) {\n        _aureliaPal.PLATFORM.location.reload();\n      }\n    };\n\n    this.authentication = authentication;\n    this.config = config;\n    this.bindingSignaler = bindingSignaler;\n    this.eventAggregator = eventAggregator;\n\n    var oldStorageKey = config.tokenPrefix ? config.tokenPrefix + '_' + config.tokenName : config.tokenName;\n    var oldToken = authentication.storage.get(oldStorageKey);\n\n    if (oldToken) {\n      logger.info('Found token with deprecated format in storage. Converting it to new format. No further action required.');\n      var fakeOldResponse = {};\n\n      fakeOldResponse[config.accessTokenProp] = oldToken;\n      this.setResponseObject(fakeOldResponse);\n      authentication.storage.remove(oldStorageKey);\n    }\n\n    this.setResponseObject(this.authentication.getResponseObject());\n\n    _aureliaPal.PLATFORM.addEventListener('storage', this.storageEventHandler);\n  }\n\n  AuthService.prototype.setTimeout = function setTimeout(ttl) {\n    var _this9 = this;\n\n    var maxTimeout = 2147483647;\n    if (ttl > maxTimeout) {\n      ttl = maxTimeout;\n      logger.warn('Token timeout limited to ', maxTimeout, ' ms (ca 24.85d).');\n    }\n\n    this.clearTimeout();\n\n    var expiredTokenHandler = function expiredTokenHandler() {\n      if (_this9.config.autoUpdateToken && _this9.authentication.getAccessToken() && _this9.authentication.getRefreshToken()) {\n        _this9.updateToken().catch(function (error) {\n          return logger.warn(error.message);\n        });\n\n        return;\n      }\n\n      _this9.setResponseObject(null);\n\n      if (_this9.config.expiredRedirect) {\n        _aureliaPal.PLATFORM.location.assign(_this9.config.expiredRedirect);\n      }\n    };\n\n    this.timeoutID = _aureliaPal.PLATFORM.global.setTimeout(expiredTokenHandler, ttl);\n    _aureliaPal.PLATFORM.addEventListener('focus', function () {\n      if (_this9.isTokenExpired()) {\n        expiredTokenHandler();\n      }\n    });\n  };\n\n  AuthService.prototype.clearTimeout = function clearTimeout() {\n    if (this.timeoutID) {\n      _aureliaPal.PLATFORM.global.clearTimeout(this.timeoutID);\n    }\n    this.timeoutID = 0;\n  };\n\n  AuthService.prototype.setResponseObject = function setResponseObject(response) {\n    this.authentication.setResponseObject(response);\n\n    this.updateAuthenticated();\n  };\n\n  AuthService.prototype.updateAuthenticated = function updateAuthenticated() {\n    this.clearTimeout();\n\n    var wasAuthenticated = this.authenticated;\n\n    this.authenticated = this.authentication.isAuthenticated();\n\n    if (this.authenticated && !Number.isNaN(this.authentication.exp)) {\n      this.setTimeout(this.getTtl() * 1000);\n    }\n\n    if (wasAuthenticated !== this.authenticated) {\n      this.bindingSignaler.signal('authentication-change');\n      this.eventAggregator.publish('authentication-change', this.authenticated);\n\n      logger.info('Authorization changed to: ' + this.authenticated);\n    }\n  };\n\n  AuthService.prototype.getMe = function getMe(criteriaOrId) {\n    if (typeof criteriaOrId === 'string' || typeof criteriaOrId === 'number') {\n      criteriaOrId = { id: criteriaOrId };\n    }\n\n    return this.client.find(this.config.joinBase(this.config.profileUrl), criteriaOrId);\n  };\n\n  AuthService.prototype.updateMe = function updateMe(body, criteriaOrId) {\n    if (typeof criteriaOrId === 'string' || typeof criteriaOrId === 'number') {\n      criteriaOrId = { id: criteriaOrId };\n    }\n    if (this.config.profileMethod === 'put') {\n      return this.client.update(this.config.joinBase(this.config.profileUrl), criteriaOrId, body);\n    }\n\n    return this.client.patch(this.config.joinBase(this.config.profileUrl), criteriaOrId, body);\n  };\n\n  AuthService.prototype.getAccessToken = function getAccessToken() {\n    return this.authentication.getAccessToken();\n  };\n\n  AuthService.prototype.getCurrentToken = function getCurrentToken() {\n    return this.getAccessToken();\n  };\n\n  AuthService.prototype.getRefreshToken = function getRefreshToken() {\n    return this.authentication.getRefreshToken();\n  };\n\n  AuthService.prototype.getIdToken = function getIdToken() {\n    return this.authentication.getIdToken();\n  };\n\n  AuthService.prototype.isAuthenticated = function isAuthenticated(callback) {\n    var _this10 = this;\n\n    this.authentication.responseAnalyzed = false;\n\n    var authenticated = this.authentication.isAuthenticated();\n\n    if (!authenticated && this.config.autoUpdateToken && this.authentication.getAccessToken() && this.authentication.getRefreshToken()) {\n      this.updateToken().then(function () {\n        if (typeof callback === 'function') {\n          callback(_this10.authenticated);\n        }\n      }).catch(function (error) {\n        return logger.warn(error.message);\n      });\n\n      authenticated = true;\n    } else if (typeof callback === 'function') {\n      _aureliaPal.PLATFORM.global.setTimeout(function () {\n        try {\n          callback(authenticated);\n        } catch (error) {\n          logger.warn(error.message);\n        }\n      }, 1);\n    }\n\n    return authenticated;\n  };\n\n  AuthService.prototype.getExp = function getExp() {\n    return this.authentication.getExp();\n  };\n\n  AuthService.prototype.getTtl = function getTtl() {\n    return this.authentication.getTtl();\n  };\n\n  AuthService.prototype.isTokenExpired = function isTokenExpired() {\n    return this.authentication.isTokenExpired();\n  };\n\n  AuthService.prototype.getTokenPayload = function getTokenPayload() {\n    return this.authentication.getPayload();\n  };\n\n  AuthService.prototype.getIdTokenPayload = function getIdTokenPayload() {\n    return this.authentication.getIdPayload();\n  };\n\n  AuthService.prototype.updateToken = function updateToken() {\n    var _this11 = this;\n\n    if (!this.authentication.getRefreshToken()) {\n      return Promise.reject(new Error('refreshToken not set'));\n    }\n\n    if (this.authentication.updateTokenCallstack.length === 0) {\n      var content = {\n        grant_type: 'refresh_token'\n      };\n\n      if (this.config.clientId) {\n        content.client_id = this.config.clientId;\n      }\n      if (this.config.clientSecret) {\n        content.client_secret = this.config.clientSecret;\n      }\n\n      content[this.config.refreshTokenSubmitProp] = this.authentication.getRefreshToken();\n\n      this.client.post(this.config.joinBase(this.config.refreshTokenUrl ? this.config.refreshTokenUrl : this.config.loginUrl), content, this.config.getOptionsForTokenRequests()).then(function (response) {\n        _this11.setResponseObject(response);\n        if (_this11.getAccessToken()) {\n          _this11.authentication.resolveUpdateTokenCallstack(_this11.isAuthenticated());\n        } else {\n          _this11.setResponseObject(null);\n\n          if (_this11.config.expiredRedirect) {\n            _aureliaPal.PLATFORM.location.assign(_this11.config.expiredRedirect);\n          }\n          _this11.authentication.resolveUpdateTokenCallstack(Promise.reject(new Error('accessToken not found in refreshToken response')));\n        }\n      }).catch(function (error) {\n        _this11.setResponseObject(null);\n\n        if (_this11.config.expiredRedirect) {\n          _aureliaPal.PLATFORM.location.assign(_this11.config.expiredRedirect);\n        }\n        _this11.authentication.resolveUpdateTokenCallstack(Promise.reject(error));\n      });\n    }\n\n    return this.authentication.toUpdateTokenCallstack();\n  };\n\n  AuthService.prototype.signup = function signup(displayNameOrCredentials, emailOrOptions, passwordOrRedirectUri, options, redirectUri) {\n    var _this12 = this;\n\n    var normalized = {};\n\n    if ((typeof displayNameOrCredentials === 'undefined' ? 'undefined' : _typeof(displayNameOrCredentials)) === 'object') {\n      normalized.credentials = displayNameOrCredentials;\n      normalized.options = emailOrOptions;\n      normalized.redirectUri = passwordOrRedirectUri;\n    } else {\n      normalized.credentials = {\n        'displayName': displayNameOrCredentials,\n        'email': emailOrOptions,\n        'password': passwordOrRedirectUri\n      };\n      normalized.options = options;\n      normalized.redirectUri = redirectUri;\n    }\n\n    return this.client.post(this.config.joinBase(this.config.signupUrl), normalized.credentials, normalized.options).then(function (response) {\n      if (_this12.config.loginOnSignup) {\n        _this12.setResponseObject(response);\n      }\n      _this12.authentication.redirect(normalized.redirectUri, _this12.config.signupRedirect);\n\n      return response;\n    });\n  };\n\n  AuthService.prototype.login = function login(emailOrCredentials, passwordOrOptions, optionsOrRedirectUri, redirectUri) {\n    var _this13 = this;\n\n    var normalized = {};\n\n    if ((typeof emailOrCredentials === 'undefined' ? 'undefined' : _typeof(emailOrCredentials)) === 'object') {\n      normalized.credentials = emailOrCredentials;\n      normalized.options = this.config.getOptionsForTokenRequests(passwordOrOptions);\n      normalized.redirectUri = optionsOrRedirectUri;\n    } else if (typeof emailOrCredentials === 'string') {\n      normalized.credentials = {\n        'email': emailOrCredentials,\n        'password': passwordOrOptions\n      };\n      normalized.options = this.config.getOptionsForTokenRequests(optionsOrRedirectUri);\n      normalized.redirectUri = redirectUri;\n    }\n\n    if (this.config.clientId) {\n      normalized.credentials.client_id = this.config.clientId;\n    }\n\n    if (this.config.clientSecret) {\n      normalized.credentials.client_secret = this.config.clientSecret;\n    }\n\n    return this.client.post(this.config.joinBase(this.config.loginUrl), normalized.credentials, normalized.options).then(function (response) {\n      _this13.setResponseObject(response);\n\n      _this13.authentication.redirect(normalized.redirectUri, _this13.config.loginRedirect);\n\n      return response;\n    });\n  };\n\n  AuthService.prototype.logout = function logout(redirectUri, query, name) {\n    var _this14 = this;\n\n    var localLogout = function localLogout(response) {\n      return new Promise(function (resolve) {\n        _this14.setResponseObject(null);\n\n        _this14.authentication.redirect(redirectUri, _this14.config.logoutRedirect, query);\n\n        if (typeof _this14.onLogout === 'function') {\n          _this14.onLogout(response);\n        }\n        resolve(response);\n      });\n    };\n\n    if (name) {\n      if (this.config.providers[name].logoutEndpoint) {\n        return this.authentication.logout(name).then(function (logoutResponse) {\n          var stateValue = _this14.authentication.storage.get(name + '_state');\n\n          if (logoutResponse.state !== stateValue) {\n            return Promise.reject('OAuth2 response state value differs');\n          }\n\n          return localLogout(logoutResponse);\n        });\n      }\n    } else {\n      return this.config.logoutUrl ? this.client.request(this.config.logoutMethod, this.config.joinBase(this.config.logoutUrl)).then(localLogout).catch(localLogout) : localLogout();\n    }\n  };\n\n  AuthService.prototype.authenticate = function authenticate(name, redirectUri, userData) {\n    var _this15 = this;\n\n    return this.authentication.authenticate(name, userData).then(function (response) {\n      _this15.setResponseObject(response);\n\n      _this15.authentication.redirect(redirectUri, _this15.config.loginRedirect);\n\n      return response;\n    });\n  };\n\n  AuthService.prototype.unlink = function unlink(name, redirectUri) {\n    var _this16 = this;\n\n    var unlinkUrl = this.config.joinBase(this.config.unlinkUrl) + name;\n\n    return this.client.request(this.config.unlinkMethod, unlinkUrl).then(function (response) {\n      _this16.authentication.redirect(redirectUri);\n\n      return response;\n    });\n  };\n\n  _createClass(AuthService, [{\n    key: 'client',\n    get: function get() {\n      return this.config.client;\n    }\n  }, {\n    key: 'auth',\n    get: function get() {\n      logger.warn('AuthService.auth is deprecated. Use .authentication instead.');\n\n      return this.authentication;\n    }\n  }]);\n\n  return AuthService;\n}(), (_applyDecoratedDescriptor(_class9.prototype, 'getCurrentToken', [_dec13], Object.getOwnPropertyDescriptor(_class9.prototype, 'getCurrentToken'), _class9.prototype)), _class9)) || _class8);\nvar AuthenticateStep = exports.AuthenticateStep = (_dec14 = (0, _aureliaDependencyInjection.inject)(AuthService), _dec14(_class11 = function () {\n  function AuthenticateStep(authService) {\n    \n\n    this.authService = authService;\n  }\n\n  AuthenticateStep.prototype.run = function run(routingContext, next) {\n    var isLoggedIn = this.authService.authenticated;\n    var loginRoute = this.authService.config.loginRoute;\n\n    if (routingContext.getAllInstructions().some(function (route) {\n      return route.config.auth === true;\n    })) {\n      if (!isLoggedIn) {\n        return next.cancel(new _aureliaRouter.Redirect(loginRoute));\n      }\n    } else if (isLoggedIn && routingContext.getAllInstructions().some(function (route) {\n      return route.fragment === loginRoute;\n    })) {\n      return next.cancel(new _aureliaRouter.Redirect(this.authService.config.loginRedirect));\n    }\n\n    return next();\n  };\n\n  return AuthenticateStep;\n}()) || _class11);\nvar AuthorizeStep = exports.AuthorizeStep = (_dec15 = (0, _aureliaDependencyInjection.inject)(AuthService), _dec15(_class12 = function () {\n  function AuthorizeStep(authService) {\n    \n\n    logger.warn('AuthorizeStep is deprecated. Use AuthenticateStep instead.');\n\n    this.authService = authService;\n  }\n\n  AuthorizeStep.prototype.run = function run(routingContext, next) {\n    var isLoggedIn = this.authService.isAuthenticated();\n    var loginRoute = this.authService.config.loginRoute;\n\n    if (routingContext.getAllInstructions().some(function (route) {\n      return route.config.auth;\n    })) {\n      if (!isLoggedIn) {\n        return next.cancel(new _aureliaRouter.Redirect(loginRoute));\n      }\n    } else if (isLoggedIn && routingContext.getAllInstructions().some(function (route) {\n      return route.fragment === loginRoute;\n    })) {\n      return next.cancel(new _aureliaRouter.Redirect(this.authService.config.loginRedirect));\n    }\n\n    return next();\n  };\n\n  return AuthorizeStep;\n}()) || _class12);\nvar FetchConfig = exports.FetchConfig = (_dec16 = (0, _aureliaDependencyInjection.inject)(_aureliaFetchClient.HttpClient, _aureliaApi.Config, AuthService, BaseConfig), _dec16(_class13 = function () {\n  function FetchConfig(httpClient, clientConfig, authService, config) {\n    \n\n    this.httpClient = httpClient;\n    this.clientConfig = clientConfig;\n    this.authService = authService;\n    this.config = config;\n  }\n\n  FetchConfig.prototype.configure = function configure(client) {\n    var _this17 = this;\n\n    if (Array.isArray(client)) {\n      var configuredClients = [];\n\n      client.forEach(function (toConfigure) {\n        configuredClients.push(_this17.configure(toConfigure));\n      });\n\n      return configuredClients;\n    }\n\n    if (typeof client === 'string') {\n      var endpoint = this.clientConfig.getEndpoint(client);\n\n      if (!endpoint) {\n        throw new Error('There is no \\'' + (client || 'default') + '\\' endpoint registered.');\n      }\n      client = endpoint.client;\n    } else if (client instanceof _aureliaApi.Rest) {\n      client = client.client;\n    } else if (!(client instanceof _aureliaFetchClient.HttpClient)) {\n      client = this.httpClient;\n    }\n\n    client.interceptors.push(this.interceptor);\n\n    return client;\n  };\n\n  _createClass(FetchConfig, [{\n    key: 'interceptor',\n    get: function get() {\n      var _this18 = this;\n\n      return {\n        request: function (_request) {\n          function request(_x3) {\n            return _request.apply(this, arguments);\n          }\n\n          request.toString = function () {\n            return _request.toString();\n          };\n\n          return request;\n        }(function (request) {\n          if (!_this18.config.httpInterceptor || !_this18.authService.isAuthenticated()) {\n            return request;\n          }\n          var token = _this18.authService.getAccessToken();\n\n          if (_this18.config.authTokenType) {\n            token = _this18.config.authTokenType + ' ' + token;\n          }\n\n          request.headers.set(_this18.config.authHeader, token);\n\n          return request;\n        }),\n        response: function (_response) {\n          function response(_x4, _x5) {\n            return _response.apply(this, arguments);\n          }\n\n          response.toString = function () {\n            return _response.toString();\n          };\n\n          return response;\n        }(function (response, request) {\n          return new Promise(function (resolve, reject) {\n            if (response.ok) {\n              return resolve(response);\n            }\n\n            if (response.status !== 401) {\n              return resolve(response);\n            }\n\n            if (!_this18.authService.authenticated) {\n              return reject(response);\n            }\n\n            if (_this18.config.httpInterceptor && _this18.config.logoutOnInvalidToken && !_this18.authService.isTokenExpired()) {\n              return reject(_this18.authService.logout());\n            }\n\n            if (!_this18.config.httpInterceptor || !_this18.authService.isTokenExpired()) {\n              return resolve(response);\n            }\n\n            if (!_this18.config.useRefreshToken || !_this18.authService.getRefreshToken()) {\n              return resolve(response);\n            }\n\n            resolve(_this18.authService.updateToken().then(function () {\n              var token = _this18.authService.getAccessToken();\n\n              if (_this18.config.authTokenType) {\n                token = _this18.config.authTokenType + ' ' + token;\n              }\n\n              request.headers.set(_this18.config.authHeader, token);\n\n              return _this18.httpClient.fetch(request).then(resolve);\n            }));\n          });\n        })\n      };\n    }\n  }]);\n\n  return FetchConfig;\n}()) || _class13);\nfunction configure(frameworkConfig, config) {\n  if (!_aureliaPal.PLATFORM.location.origin) {\n    _aureliaPal.PLATFORM.location.origin = _aureliaPal.PLATFORM.location.protocol + '//' + _aureliaPal.PLATFORM.location.hostname + (_aureliaPal.PLATFORM.location.port ? ':' + _aureliaPal.PLATFORM.location.port : '');\n  }\n\n  var baseConfig = frameworkConfig.container.get(BaseConfig);\n\n  if (typeof config === 'function') {\n    config(baseConfig);\n  } else if ((typeof config === 'undefined' ? 'undefined' : _typeof(config)) === 'object') {\n    baseConfig.configure(config);\n  }\n\n  for (var _iterator = baseConfig.globalValueConverters, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var converter = _ref;\n\n    frameworkConfig.globalResources(_aureliaPal.PLATFORM.moduleName('./' + converter));\n    logger.info('Add globalResources value-converter: ' + converter);\n  }\n  var fetchConfig = frameworkConfig.container.get(FetchConfig);\n  var clientConfig = frameworkConfig.container.get(_aureliaApi.Config);\n\n  if (Array.isArray(baseConfig.configureEndpoints)) {\n    baseConfig.configureEndpoints.forEach(function (endpointToPatch) {\n      fetchConfig.configure(endpointToPatch);\n    });\n  }\n\n  var client = void 0;\n\n  if (baseConfig.endpoint !== null) {\n    if (typeof baseConfig.endpoint === 'string') {\n      var endpoint = clientConfig.getEndpoint(baseConfig.endpoint);\n\n      if (!endpoint) {\n        throw new Error('There is no \\'' + (baseConfig.endpoint || 'default') + '\\' endpoint registered.');\n      }\n      client = endpoint;\n    } else if (baseConfig.endpoint instanceof _aureliaFetchClient.HttpClient) {\n      client = new _aureliaApi.Rest(baseConfig.endpoint);\n    }\n  }\n\n  if (!(client instanceof _aureliaApi.Rest)) {\n    client = new _aureliaApi.Rest(frameworkConfig.container.get(_aureliaFetchClient.HttpClient));\n  }\n\n  baseConfig.client = client;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///aurelia-authentication\n");

/***/ }),

/***/ "aurelia-authentication/authFilterValueConverter":
/*!*********************************************************************************************!*\
  !*** ./node_modules/aurelia-authentication/dist/native-modules/authFilterValueConverter.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.__esModule = true;\nexports.AuthFilterValueConverter = undefined;\n\nvar _aureliaRouter = __webpack_require__(/*! aurelia-router */ \"4ysu\");\n\n\n\nvar AuthFilterValueConverter = exports.AuthFilterValueConverter = function () {\n  function AuthFilterValueConverter() {\n    \n  }\n\n  AuthFilterValueConverter.prototype.toView = function toView(routes, isAuthenticated) {\n    return routes.filter(function (route) {\n      return typeof route.config.auth !== 'boolean' || route.config.auth === isAuthenticated;\n    });\n  };\n\n  return AuthFilterValueConverter;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXVyZWxpYS1hdXRoZW50aWNhdGlvbi9hdXRoRmlsdGVyVmFsdWVDb252ZXJ0ZXIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXVyZWxpYS1hdXRoZW50aWNhdGlvbi9kaXN0L25hdGl2ZS1tb2R1bGVzL2F1dGhGaWx0ZXJWYWx1ZUNvbnZlcnRlci5qcz9lNWJlIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuQXV0aEZpbHRlclZhbHVlQ29udmVydGVyID0gdW5kZWZpbmVkO1xuXG52YXIgX2F1cmVsaWFSb3V0ZXIgPSByZXF1aXJlKCdhdXJlbGlhLXJvdXRlcicpO1xuXG5cblxudmFyIEF1dGhGaWx0ZXJWYWx1ZUNvbnZlcnRlciA9IGV4cG9ydHMuQXV0aEZpbHRlclZhbHVlQ29udmVydGVyID0gZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBBdXRoRmlsdGVyVmFsdWVDb252ZXJ0ZXIoKSB7XG4gICAgXG4gIH1cblxuICBBdXRoRmlsdGVyVmFsdWVDb252ZXJ0ZXIucHJvdG90eXBlLnRvVmlldyA9IGZ1bmN0aW9uIHRvVmlldyhyb3V0ZXMsIGlzQXV0aGVudGljYXRlZCkge1xuICAgIHJldHVybiByb3V0ZXMuZmlsdGVyKGZ1bmN0aW9uIChyb3V0ZSkge1xuICAgICAgcmV0dXJuIHR5cGVvZiByb3V0ZS5jb25maWcuYXV0aCAhPT0gJ2Jvb2xlYW4nIHx8IHJvdXRlLmNvbmZpZy5hdXRoID09PSBpc0F1dGhlbnRpY2F0ZWQ7XG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIEF1dGhGaWx0ZXJWYWx1ZUNvbnZlcnRlcjtcbn0oKTsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///aurelia-authentication/authFilterValueConverter\n");

/***/ })

}]);